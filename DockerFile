# # # 베이스 이미지로 Java 17버전이 포함된 Docker 이미지를 사용
# # FROM bellsoft/liberica-openjdk-alpine:17
# #
# # # Gradle을 사용해 빌드를 실행하는 명령어
# # CMD ["./gradlew", "clean", "build"]
# #
# # # 컨테이너 내에 /tmp 디렉터리를 볼륨으로 설정
# # VOLUME /tmp
# #
# # # Gradle로 빌드한 jar 파일의 위치를 변수로 설정
# # ARG JAR_FILE=build/libs/*.jar
# #
# # # JAR_FILE 변수에 지정된 파일을 app.jar라는 이름으로 컨테이너에 추가
# # COPY ${JAR_FILE} app.jar
#
# FROM openjdk:17-jdk-slim
#
# WORKDIR /app
#
# COPY build/libs/auth_flow-0.0.1-SNAPSHOT.jar /app/auth_flow-0.0.1-SNAPSHOT.jar
#
# # 컨테이너가 사용할 포트를 설정, 이 경우에는 8080 포트를 사용
# EXPOSE 8080
#
# # 컨테이너가 실행될 때 기본적으로 실행될 명령어를 설정, 이 경우에는 Java 애플리케이션을 실행하는 명령어
# ENTRYPOINT ["java", "-jar", "/app.jar"]
#
# # tmp 볼륨을 생성하는 이유는?
# # Docker 컨테이너 내부에 임시 파일을 저장하기 위한 볼륨을 생성합니다. 이는 컨테이너와 호스트 시스템 간의 데이터를 공유하거나, 컨테이너 간에 데이터를 공유하거나, 컨테이너의 데이터를 지속적으로 유지하는 데 사용될 수 있습니다.
# # 또한 임시 파일은 컨테이너가 종료되었을 때 자동으로 삭제되므로, 이를 통해 디스크 공간을 절약할 수 있습니다.